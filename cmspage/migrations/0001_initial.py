# Generated by Django 5.1.1 on 2024-09-28 11:07

import cmspage.mixins
import cmspage.models
import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        ('wagtailcore', '0094_alter_page_locale'),
        ('wagtaildocs', '0013_delete_uploadeddocument'),
        ('wagtailimages', '0026_delete_uploadedimage'),
    ]

    operations = [
        migrations.CreateModel(
            name='CMSPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('display_title', models.BooleanField(default=True, help_text='Display the page title on the page')),
                ('display_tags', models.BooleanField(default=False, help_text='Display the page tags on the page')),
                ('seo_keywords', models.CharField(blank=True, help_text='SEO Keywords', max_length=255)),
                ('body', wagtail.fields.StreamField([('hero', 3), ('title', 5), ('cards', 16), ('image_and_text', 24), ('cta', 27), ('richtext', 30), ('video', 32), ('large_image', 33), ('table', 34), ('carousel', 35), ('new_section', 36)], blank=True, block_lookup={0: ('wagtail.images.blocks.ImageChooserBlock', (), {}), 1: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('bg-transparent', 'Transparent'), ('bg-body', 'Page'), ('bg-light', 'Light'), ('bg-dark', 'Dark'), ('bg-white', 'White'), ('bg-black', 'Dark'), ('bg-primary', 'Primary'), ('bg-secondary', 'Secondary'), ('bg-success', 'Success'), ('bg-warning', 'Warning'), ('bg-info', 'Info'), ('bg-danger', 'Danger')], 'help_text': 'Background type or color'}), 2: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('bg-opacity-100', '100%'), ('bg-opacity-75', '75%'), ('bg-opacity-50', '50%'), ('bg-opacity-25', '25%'), ('bg-gradient', 'Gradient')], 'help_text': 'Background opacity'}), 3: ('wagtail.blocks.StructBlock', [[('image', 0), ('background', 1), ('opacity', 2)]], {'label': 'Hero Image', 'max_num': 1}), 4: ('wagtail.blocks.CharBlock', (), {'help_text': 'Title text to display', 'required': True}), 5: ('wagtail.blocks.StructBlock', [[('background', 1), ('opacity', 2), ('text', 4)]], {'label': 'Title', 'max_num': 1}), 6: ('wagtail.blocks.CharBlock', (), {'blank': True, 'help_text': 'Bold title text for this card (len=255)', 'label': 'Card Title', 'max_length': 255, 'null': True, 'required': False}), 7: ('wagtail.blocks.RichTextBlock', (), {'blank': True, 'help_text': 'Optional text for this card', 'label': 'Card Text', 'null': True, 'required': False}), 8: ('wagtail.images.blocks.ImageChooserBlock', (), {'help_text': 'Image (resized)', 'label': 'Card Image', 'required': False}), 9: ('wagtail.blocks.PageChooserBlock', (), {'label': 'Page link', 'required': False}), 10: ('wagtail.documents.blocks.DocumentChooserBlock', (), {'label': 'Document link', 'required': False}), 11: ('wagtail.blocks.CharBlock', (), {'label': 'Extra link', 'max_length': 255, 'required': False}), 12: ('wagtail.blocks.CharBlock', (), {'label': 'Button Title (use hyphen for special link button)', 'max_length': 255, 'required': False}), 13: ('wagtail.blocks.StructBlock', [[('background', 1), ('opacity', 2), ('page_link', 9), ('doc_link', 10), ('extra_link', 11), ('button_title', 12)]], {'help_text': 'Enter a page or document, or an external link', 'label': 'Card Link', 'required': False}), 14: ('wagtail.blocks.StructBlock', [[('title', 6), ('text', 7), ('image', 8), ('link', 13)]], {}), 15: ('wagtail.blocks.ListBlock', (14,), {}), 16: ('wagtail.blocks.StructBlock', [[('background', 1), ('opacity', 2), ('cards', 15)]], {}), 17: ('wagtail.images.blocks.ImageChooserBlock', (), {'blank': True, 'null': True}), 18: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('full', 'Full width centered'), ('left', 'Image to the left'), ('right', 'Image to the right')], 'help_text': 'Full image - text below, Image left - text right, or image right - text left.'}), 19: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('standard', 'Standard 786x552'), ('landscape', 'Landscape 786x1104'), ('portrait', 'Portrait 786x300')], 'help_text': 'Layout - match with picture dimensions'}), 20: ('wagtail.blocks.CharBlock', (), {'blank': True, 'help_text': 'Max length of 60 characters.', 'max_length': 60, 'null': True, 'required': False}), 21: ('wagtail.blocks.RichTextBlock', (), {'blank': True, 'features': ['h2', 'h3', 'h4', 'bold', 'italic', 'ol', 'ul', 'hr', 'document-link', 'image', 'embed', 'code', 'blockquote', 'superscript', 'subscript', 'strikethrough'], 'help_text': 'Description for this item', 'required': False}), 22: ('wagtail.blocks.BooleanBlock', (), {'blank': True, 'default': False, 'help_text': 'Overlay text on image', 'required': False}), 23: ('wagtail.blocks.StructBlock', [[('background', 1), ('opacity', 2), ('page_link', 9), ('doc_link', 10), ('extra_link', 11), ('button_title', 12)]], {'blank': True, 'null': True, 'required': False}), 24: ('wagtail.blocks.StructBlock', [[('background', 1), ('opacity', 2), ('image', 17), ('image_alignment', 18), ('image_size', 19), ('title', 20), ('text', 21), ('overlay', 22), ('link', 23)]], {}), 25: ('wagtail.blocks.CharBlock', (), {'blank': True, 'help_text': 'Max length of 60 characters, optional', 'max_length': 60, 'null': True, 'required': False}), 26: ('wagtail.blocks.RichTextBlock', (), {'blank': True, 'features': ['h2', 'h3', 'h4', 'bold', 'italic', 'ol', 'ul', 'hr', 'document-link', 'image', 'embed', 'code', 'blockquote', 'superscript', 'subscript', 'strikethrough'], 'help_text': 'Call to action text, optional (max=200)', 'required': False}), 27: ('wagtail.blocks.StructBlock', [[('background', 1), ('opacity', 2), ('title', 25), ('text', 26), ('link', 23)]], {}), 28: ('wagtail.blocks.CharBlock', (), {'blank': True, 'help_text': 'Display title, optional (max len=120)', 'max_length': 120, 'null': True, 'required': False}), 29: ('wagtail.blocks.RichTextBlock', (), {'features': ['h2', 'h3', 'h4', 'bold', 'italic', 'ol', 'ul', 'hr', 'document-link', 'image', 'embed', 'code', 'blockquote', 'superscript', 'subscript', 'strikethrough'], 'help_text': 'Rich text block, required'}), 30: ('wagtail.blocks.StructBlock', [[('background', 1), ('opacity', 2), ('title', 28), ('content', 29)]], {}), 31: ('wagtail.embeds.blocks.EmbedBlock', (), {}), 32: ('wagtail.blocks.StructBlock', [[('background', 1), ('opacity', 2), ('title', 25), ('video', 31), ('text', 26)]], {}), 33: ('wagtail.blocks.StructBlock', [[('image', 0), ('background', 1), ('opacity', 2)]], {}), 34: ('cmspage.blocks.CustomTableBlock', (), {}), 35: ('wagtail.blocks.StructBlock', [[('background', 1), ('opacity', 2)]], {}), 36: ('cmspage.blocks.NewSectionBlock', (), {})}, null=True)),
            ],
            options={
                'verbose_name': 'CMS Page',
                'verbose_name_plural': 'CMS Pages',
            },
            bases=('wagtailcore.page', cmspage.mixins.CMSTemplateMixin),
        ),
        migrations.CreateModel(
            name='CMSPageImage',
            fields=[
                ('image_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailimages.image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailimages.image',),
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('taggit.tag',),
        ),
        migrations.CreateModel(
            name='CarouselImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('carousel_title', models.CharField(blank=True, help_text='Display title, optional (max len=120)', max_length=120, null=True)),
                ('carousel_content', wagtail.fields.RichTextField(blank=True, null=True)),
                ('carousel_attribution', models.CharField(blank=True, help_text='Display title, optional (max len=120)', max_length=120, null=True)),
                ('carousel_interval', models.IntegerField(default=12000, help_text='Keep visible for time in milliseconds')),
                ('parent_pg', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='carousel_images', to='cmspage.cmspage')),
                ('carousel_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='cmspage.cmspageimage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MenuLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menu_order', models.IntegerField(default=0, help_text='Specify the order in the menu', verbose_name='Order')),
                ('menu_title', models.CharField(blank=True, help_text='Override the menu title', max_length=32, null=True, validators=[cmspage.models.min_length_validator], verbose_name='Menu Title')),
                ('link_url', models.URLField(blank=True, help_text='Set a custom URL if not linking to a page or document.Title is required for this link type', verbose_name='External Link')),
                ('menu_icon', models.CharField(choices=[('', 'None'), ('page', 'Page'), ('document', 'Document'), ('link', 'Link')], default='', help_text='Select an icon to display next to the link', max_length=16, verbose_name='Icon')),
                ('link_document', models.ForeignKey(blank=True, help_text="Select a document to link (leave blank for internal page or custom URL).Leave title blank to use this document's title", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.document', verbose_name='Select Document')),
                ('link_page', models.ForeignKey(blank=True, help_text="Select an internal page to link (leave blank for custom URL or document).Leave title blank to use this page's title", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='menu_links', to='wagtailcore.page', verbose_name='Select Page')),
                ('parent', models.ForeignKey(blank=True, help_text='Select a parent link to add it to a sub-menu, or blank for a top-level menu item', null=True, on_delete=django.db.models.deletion.SET_NULL, to='cmspage.menulink')),
                ('site', models.ForeignKey(default=1, help_text='Select the site to which the menu link applies', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailcore.site')),
            ],
            options={
                'verbose_name': 'Menu Link',
                'ordering': ['menu_order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='PageTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='cmspage_tags', to='wagtailcore.page')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_items', to='taggit.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='cmspage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='Tags used to search for this page (optional)', through='cmspage.PageTag', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.CreateModel(
            name='CMSHomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('display_title', models.BooleanField(default=True, help_text='Display the page title on the page')),
                ('display_tags', models.BooleanField(default=False, help_text='Display the page tags on the page')),
                ('seo_keywords', models.CharField(blank=True, help_text='SEO Keywords', max_length=255)),
                ('body', wagtail.fields.StreamField([('hero', 3), ('title', 5), ('cards', 16), ('image_and_text', 24), ('cta', 27), ('richtext', 30), ('video', 32), ('large_image', 33), ('table', 34), ('carousel', 35), ('new_section', 36)], blank=True, block_lookup={0: ('wagtail.images.blocks.ImageChooserBlock', (), {}), 1: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('bg-transparent', 'Transparent'), ('bg-body', 'Page'), ('bg-light', 'Light'), ('bg-dark', 'Dark'), ('bg-white', 'White'), ('bg-black', 'Dark'), ('bg-primary', 'Primary'), ('bg-secondary', 'Secondary'), ('bg-success', 'Success'), ('bg-warning', 'Warning'), ('bg-info', 'Info'), ('bg-danger', 'Danger')], 'help_text': 'Background type or color'}), 2: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('bg-opacity-100', '100%'), ('bg-opacity-75', '75%'), ('bg-opacity-50', '50%'), ('bg-opacity-25', '25%'), ('bg-gradient', 'Gradient')], 'help_text': 'Background opacity'}), 3: ('wagtail.blocks.StructBlock', [[('image', 0), ('background', 1), ('opacity', 2)]], {'label': 'Hero Image', 'max_num': 1}), 4: ('wagtail.blocks.CharBlock', (), {'help_text': 'Title text to display', 'required': True}), 5: ('wagtail.blocks.StructBlock', [[('background', 1), ('opacity', 2), ('text', 4)]], {'label': 'Title', 'max_num': 1}), 6: ('wagtail.blocks.CharBlock', (), {'blank': True, 'help_text': 'Bold title text for this card (len=255)', 'label': 'Card Title', 'max_length': 255, 'null': True, 'required': False}), 7: ('wagtail.blocks.RichTextBlock', (), {'blank': True, 'help_text': 'Optional text for this card', 'label': 'Card Text', 'null': True, 'required': False}), 8: ('wagtail.images.blocks.ImageChooserBlock', (), {'help_text': 'Image (resized)', 'label': 'Card Image', 'required': False}), 9: ('wagtail.blocks.PageChooserBlock', (), {'label': 'Page link', 'required': False}), 10: ('wagtail.documents.blocks.DocumentChooserBlock', (), {'label': 'Document link', 'required': False}), 11: ('wagtail.blocks.CharBlock', (), {'label': 'Extra link', 'max_length': 255, 'required': False}), 12: ('wagtail.blocks.CharBlock', (), {'label': 'Button Title (use hyphen for special link button)', 'max_length': 255, 'required': False}), 13: ('wagtail.blocks.StructBlock', [[('background', 1), ('opacity', 2), ('page_link', 9), ('doc_link', 10), ('extra_link', 11), ('button_title', 12)]], {'help_text': 'Enter a page or document, or an external link', 'label': 'Card Link', 'required': False}), 14: ('wagtail.blocks.StructBlock', [[('title', 6), ('text', 7), ('image', 8), ('link', 13)]], {}), 15: ('wagtail.blocks.ListBlock', (14,), {}), 16: ('wagtail.blocks.StructBlock', [[('background', 1), ('opacity', 2), ('cards', 15)]], {}), 17: ('wagtail.images.blocks.ImageChooserBlock', (), {'blank': True, 'null': True}), 18: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('full', 'Full width centered'), ('left', 'Image to the left'), ('right', 'Image to the right')], 'help_text': 'Full image - text below, Image left - text right, or image right - text left.'}), 19: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('standard', 'Standard 786x552'), ('landscape', 'Landscape 786x1104'), ('portrait', 'Portrait 786x300')], 'help_text': 'Layout - match with picture dimensions'}), 20: ('wagtail.blocks.CharBlock', (), {'blank': True, 'help_text': 'Max length of 60 characters.', 'max_length': 60, 'null': True, 'required': False}), 21: ('wagtail.blocks.RichTextBlock', (), {'blank': True, 'features': ['h2', 'h3', 'h4', 'bold', 'italic', 'ol', 'ul', 'hr', 'document-link', 'image', 'embed', 'code', 'blockquote', 'superscript', 'subscript', 'strikethrough'], 'help_text': 'Description for this item', 'required': False}), 22: ('wagtail.blocks.BooleanBlock', (), {'blank': True, 'default': False, 'help_text': 'Overlay text on image', 'required': False}), 23: ('wagtail.blocks.StructBlock', [[('background', 1), ('opacity', 2), ('page_link', 9), ('doc_link', 10), ('extra_link', 11), ('button_title', 12)]], {'blank': True, 'null': True, 'required': False}), 24: ('wagtail.blocks.StructBlock', [[('background', 1), ('opacity', 2), ('image', 17), ('image_alignment', 18), ('image_size', 19), ('title', 20), ('text', 21), ('overlay', 22), ('link', 23)]], {}), 25: ('wagtail.blocks.CharBlock', (), {'blank': True, 'help_text': 'Max length of 60 characters, optional', 'max_length': 60, 'null': True, 'required': False}), 26: ('wagtail.blocks.RichTextBlock', (), {'blank': True, 'features': ['h2', 'h3', 'h4', 'bold', 'italic', 'ol', 'ul', 'hr', 'document-link', 'image', 'embed', 'code', 'blockquote', 'superscript', 'subscript', 'strikethrough'], 'help_text': 'Call to action text, optional (max=200)', 'required': False}), 27: ('wagtail.blocks.StructBlock', [[('background', 1), ('opacity', 2), ('title', 25), ('text', 26), ('link', 23)]], {}), 28: ('wagtail.blocks.CharBlock', (), {'blank': True, 'help_text': 'Display title, optional (max len=120)', 'max_length': 120, 'null': True, 'required': False}), 29: ('wagtail.blocks.RichTextBlock', (), {'features': ['h2', 'h3', 'h4', 'bold', 'italic', 'ol', 'ul', 'hr', 'document-link', 'image', 'embed', 'code', 'blockquote', 'superscript', 'subscript', 'strikethrough'], 'help_text': 'Rich text block, required'}), 30: ('wagtail.blocks.StructBlock', [[('background', 1), ('opacity', 2), ('title', 28), ('content', 29)]], {}), 31: ('wagtail.embeds.blocks.EmbedBlock', (), {}), 32: ('wagtail.blocks.StructBlock', [[('background', 1), ('opacity', 2), ('title', 25), ('video', 31), ('text', 26)]], {}), 33: ('wagtail.blocks.StructBlock', [[('image', 0), ('background', 1), ('opacity', 2)]], {}), 34: ('cmspage.blocks.CustomTableBlock', (), {}), 35: ('wagtail.blocks.StructBlock', [[('background', 1), ('opacity', 2)]], {}), 36: ('cmspage.blocks.NewSectionBlock', (), {})}, null=True)),
                ('tags', modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='Tags used to search for this page (optional)', through='cmspage.PageTag', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'CMS Home Page',
                'verbose_name_plural': 'CMS Home Pages',
            },
            bases=('wagtailcore.page', cmspage.mixins.CMSTemplateMixin),
        ),
        migrations.CreateModel(
            name='SiteVariables',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vars', models.JSONField(blank=True, default=dict, null=True)),
                ('site', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='variables', to='wagtailcore.site')),
            ],
            options={
                'verbose_name': 'Site Variables',
            },
        ),
    ]
